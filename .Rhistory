"Solar Photovoltaic",
"Geothermal",
"Onshore Wind Turbine",
"Wood/Wood Waste Biomass",
"Coal Integrated Gasification Combined Cycle",
"Other Gases",
"Petroleum Coke",
"Municipal Solid Waste",
"Landfill Gas",
"Natural Gas with Compressed Air Storage",
"All Other",
"Other Waste Biomass",
"Solar Thermal without Energy Storage",
"Other Natural Gas",
"Solar Thermal with Energy Storage",
"Flywheels",
"Offshore Wind Turbine")
state_year_capacity <- expanded_gens2 %>%
group_by(`Plant State`, year) %>%
summarise(across(all_of(tech_columns), sum, na.rm = TRUE), .groups = "drop")
renewable_tech <- c("Conventional Hydroelectric",
"Hydroelectric Pumped Storage",
"Solar Photovoltaic",
"Geothermal",
"Onshore Wind Turbine",
"Wood/Wood Waste Biomass",
"Solar Thermal without Energy Storage",
"Solar Thermal with Energy Storage",
"Offshore Wind Turbine",
"Other Waste Biomass",
"Municipal Solid Waste",
"Landfill Gas")
nonrenewable_tech <- c("Natural Gas Steam Turbine",
"Conventional Steam Coal",
"Natural Gas Fired Combined Cycle",
"Natural Gas Fired Combustion Turbine",
"Petroleum Liquids",
"Nuclear",
"Natural Gas Internal Combustion Engine",
"Coal Integrated Gasification Combined Cycle",
"Other Gases",
"Petroleum Coke",
"Natural Gas with Compressed Air Storage",
"Other Natural Gas")
# Aggregate to the national level by summing over all generators for each year
national_totals <- expanded_gens2 %>%
group_by(year) %>%
summarise(across(all_of(tech_columns), \(x) sum(x, na.rm = TRUE)), .groups = "drop") %>%
mutate(
renewable_capacity = rowSums(across(all_of(renewable_tech)), na.rm = TRUE),
nonrenewable_capacity = rowSums(across(all_of(nonrenewable_tech)), na.rm = TRUE)
)
# Reshape the data into a long format for plotting
national_totals_long <- national_totals %>%
select(year, renewable_capacity, nonrenewable_capacity) %>%
pivot_longer(cols = c(renewable_capacity, nonrenewable_capacity),
names_to = "type", values_to = "capacity")
# Create the line graph using ggplot2
ggplot(national_totals_long, aes(x = year, y = capacity, color = type)) +
geom_line(size = 1) +
labs(title = "National Nameplate Capacity over Time",
x = "Year",
y = "Nameplate Capacity",
color = "Energy Type") +
theme_minimal()
national_totals_long_2000 <- national_totals_long %>%
filter(year >= 2000)
# Create the line graph using ggplot2 with the filtered data
ggplot(national_totals_long_2000, aes(x = year, y = capacity, color = type)) +
geom_line(linewidth = 1) +
labs(title = "National Nameplate Capacity over Time (2000 Onwards)",
x = "Year",
y = "Nameplate Capacity",
color = "Energy Type") +
theme_minimal()
ggplot(national_totals_long_2000, aes(x = year, y = capacity, color = type)) +
geom_line(linewidth = 1) +
labs(
title = "National Nameplate Capacity over Time (2000 Onwards)",
x = "Year",
y = "Nameplate Capacity",
color = "Energy Type"
) +
scale_color_discrete(
labels = c("nonrenewable_capacity" = "Non-Renewables",
"renewable_capacity" = "Renewables")
) +
theme_minimal()
ggplot(national_totals_long_2000, aes(x = year, y = capacity, color = type)) +
geom_line(linewidth = 1) +
labs(
title = "",
x = "Year",
y = "Nameplate Capacity",
color = "Energy Type"
) +
scale_color_discrete(
labels = c("nonrenewable_capacity" = "Non-Renewables",
"renewable_capacity" = "Renewables")
) +
theme_minimal()
state_year <- expanded_gens2 %>%
filter(year >= 2000) %>%
group_by(`Plant State`, year) %>%
summarise(
across(all_of(renewable_tech), ~ sum(.x, na.rm = TRUE), .names = "ren_{.col}"),
across(all_of(nonrenewable_tech), ~ sum(.x, na.rm = TRUE), .names = "non_{.col}"),
.groups = "drop"
) %>%
# Sum across all renewable and nonrenewable columns to get total capacity by state and year
mutate(
total_renewable = rowSums(select(., starts_with("ren_")), na.rm = TRUE),
total_nonrenewable = rowSums(select(., starts_with("non_")), na.rm = TRUE),
total_capacity = total_renewable + total_nonrenewable,
renewable_pct = (total_renewable / total_capacity) * 100
) %>%
select(`Plant State`, year, renewable_pct)
# Step 2: Create two datasets: one for Maine and one for all other states (averaged)
maine_data <- state_year %>%
filter(`Plant State` == "ME") %>%
select(year, renewable_pct) %>%
mutate(region = "Maine")
non_maine_data <- state_year %>%
filter(`Plant State` != "ME") %>%
group_by(year) %>%
summarise(avg_renewable_pct = mean(renewable_pct, na.rm = TRUE), .groups = "drop") %>%
mutate(region = "Other States") %>%
rename(renewable_pct = avg_renewable_pct)
# Step 3: Combine the two datasets for plotting
renewable_comparison <- bind_rows(maine_data, non_maine_data)
# Step 4: Create the line graph using ggplot2
ggplot(renewable_comparison, aes(x = year, y = renewable_pct, color = region)) +
geom_line(linewidth = 1) +
labs(
title = "Percentage of Energy from Renewables: Maine vs. Other States (2000 Onwards)",
x = "Year",
y = "Renewable Energy Percentage",
color = "Region"
) +
theme_minimal()
solar_data <- expanded_gens2 %>%
filter(year >= 2000) %>%
group_by(`Plant State`, year) %>%
summarise(
solar_capacity = sum(`Solar Photovoltaic`, na.rm = TRUE),
total_capacity = rowSums(across(all_of(tech_columns)), na.rm = TRUE),
.groups = "drop"
) %>%
mutate(
solar_pct = (solar_capacity / total_capacity) * 100
) %>%
select(`Plant State`, year, solar_pct)
# Separate Maine and all other states:
#   - For Maine, we simply keep its series.
#   - For other states, we calculate the average solar percentage by year.
maine_solar <- solar_data %>%
filter(`Plant State` == "ME") %>%
select(year, solar_pct) %>%
mutate(region = "Maine")
other_solar <- solar_data %>%
filter(`Plant State` != "ME") %>%
group_by(year) %>%
summarise(avg_solar_pct = mean(solar_pct, na.rm = TRUE), .groups = "drop") %>%
rename(solar_pct = avg_solar_pct) %>%
mutate(region = "Other States")
# Combine the two datasets into one
solar_comparison <- bind_rows(maine_solar, other_solar)
# Create the line graph using ggplot2
ggplot(solar_comparison, aes(x = year, y = solar_pct, color = region)) +
geom_line(linewidth = 1) +
labs(
title = "Percentage of Capacity from Solar Photovoltaic (2000 Onwards)",
x = "Year",
y = "Solar Photovoltaic Percentage",
color = "Region"
) +
theme_minimal()
# Create the line graph using ggplot2
ggplot(solar_comparison, aes(x = year, y = solar_pct, color = region)) +
geom_line(linewidth = 1) +
labs(
title = "Percentage of Capacity from Solar Photovoltaic (2000 Onwards)",
x = "Year",
y = "Solar Photovoltaic Percentage",
color = "Region"
) +
theme_minimal()
head(state_year_capacity)
state_year_filtered <- state_year_capacity %>%
filter(year >= 2000)
# 2. Compute total capacity and calculate the solar percentage.
# We'll assume that columns 3 to 29 are all technology capacity columns.
state_year_filtered <- state_year_filtered %>%
mutate(
total_capacity = rowSums(across(-c(`Plant State`, year)), na.rm = TRUE),
solar_pct = (`Solar Photovoltaic` / total_capacity) * 100
)
# 3. Create separate datasets:
#    - For Maine: keep the solar percentage for Maine.
#    - For all other states: compute the average solar percentage by year.
maine_solar <- state_year_filtered %>%
filter(`Plant State` == "ME") %>%
select(year, solar_pct) %>%
mutate(region = "Maine")
other_solar <- state_year_filtered %>%
filter(`Plant State` != "ME") %>%
group_by(year) %>%
summarise(avg_solar_pct = mean(solar_pct, na.rm = TRUE), .groups = "drop") %>%
rename(solar_pct = avg_solar_pct) %>%
mutate(region = "Other States")
# 4. Combine both datasets for plotting
solar_comparison <- bind_rows(maine_solar, other_solar)
# 5. Create the line graph using ggplot2.
ggplot(solar_comparison, aes(x = year, y = solar_pct, color = region)) +
geom_line(linewidth = 1) +
labs(
title = "Percentage of Capacity from Solar Photovoltaic (2000 Onwards)",
x = "Year",
y = "Solar Photovoltaic Percentage (%)",
color = "Region"
) +
theme_minimal() +
coord_cartesian(ylim = c(0, 100))
ggplot(solar_comparison, aes(x = year, y = solar_pct, color = region)) +
geom_line(linewidth = 1) +
labs(
title = "Percentage of Capacity from Solar Photovoltaic (2000 Onwards)",
x = "Year",
y = "Solar Photovoltaic Percentage (%)",
color = "Region"
) +
theme_minimal()
ggplot(solar_comparison, aes(x = year, y = solar_pct, color = region)) +
geom_line(linewidth = 1) +
labs(
title = "",
x = "Year",
y = "Solar Photovoltaic Percentage (%)",
color = "Region"
) +
theme_minimal()
# Step 4: Create the line graph using ggplot2 - Percentage of Energy from Renewables: Maine vs. Other States (2000 Onwards)
ggplot(renewable_comparison, aes(x = year, y = renewable_pct, color = region)) +
geom_line(linewidth = 1) +
labs(
title = "",
x = "Year",
y = "Renewable Energy Percentage",
color = "Region"
) +
theme_minimal()
head(master_raster_V2_reduced)
`Election_data_by_state_2008-2024` <- readRDS("~/Wageningen/University/Thesis/Data/1. Modified Data/Election_data_by_state_2008-2024.rds")
`Election_data_by_state_2008-2024`
# Create Maine subset
maine_elec <- Election_data_by_state_2008_2024 %>%
filter(state == "Maine") %>%
select(year, dem_lean) %>%
mutate(region = "Maine")
# Create Maine subset
maine_elec <- `Election_data_by_state_2008-2024` %>%
filter(state == "Maine") %>%
select(year, dem_lean) %>%
mutate(region = "Maine")
# Create dataset for all other states: average dem_lean by year
other_elec <- `Election_data_by_state_2008-2024` %>%
filter(state != "Maine") %>%
group_by(year) %>%
summarise(avg_dem_lean = mean(dem_lean, na.rm = TRUE), .groups = "drop") %>%
rename(dem_lean = avg_dem_lean) %>%
mutate(region = "Other States")
# Combine the two datasets for plotting
elec_plot_data <- bind_rows(maine_elec, other_elec)
# Create the line graph
ggplot(elec_plot_data, aes(x = year, y = dem_lean, color = region)) +
geom_line(linewidth = 1) +
labs(
title = "Democratic Leaning (dem_lean) by Year: Maine vs. Other States",
x = "Year",
y = "dem_lean",
color = "Region"
) +
theme_minimal()
ggplot(elec_plot_data, aes(x = year, y = dem_lean, color = region)) +
geom_line(linewidth = 1) +
geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
scale_color_manual(
values = c("Maine" = "purple", "Other States" = "forestgreen")
) +
labs(
title = "Democratic Leaning (dem_lean) by Year: Maine vs. Other States",
x = "Year",
y = "dem_lean",
color = "Region"
) +
theme_minimal()
# Create Maine subset
maine_elec <- Election_data_by_state_2008_2024 %>%
filter(state == "Maine") %>%
select(year, dem_lean) %>%
mutate(region = "Maine")
# Create Maine subset
maine_elec <- `Election_data_by_state_2008-2024` %>%
filter(state == "Maine") %>%
select(year, dem_lean) %>%
mutate(region = "Maine")
# Create dataset for all other states: average dem_lean by year
other_elec <- `Election_data_by_state_2008-2024` %>%
filter(state != "Maine") %>%
group_by(year) %>%
summarise(avg_dem_lean = mean(dem_lean, na.rm = TRUE), .groups = "drop") %>%
rename(dem_lean = avg_dem_lean) %>%
mutate(region = "Other States")
# Combine the two datasets for plotting
elec_plot_data <- bind_rows(maine_elec, other_elec)
# Create the line graph
ggplot(elec_plot_data, aes(x = year, y = dem_lean, color = region)) +
geom_line(linewidth = 1) +
geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
scale_color_manual(
values = c("Maine" = "purple", "Other States" = "forestgreen")
) +
labs(
title = "Democratic Leaning (dem_lean) by Year: Maine vs. Other States",
x = "Year",
y = "dem_lean",
color = "Region"
) +
theme_minimal()
ggplot(elec_plot_data, aes(x = year, y = dem_lean, color = region)) +
geom_line(linewidth = 1) +
geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
scale_color_manual(
values = c("Maine" = "black", "Other States" = "forestgreen")
) +
labs(
title = "Democratic Leaning (dem_lean) by Year: Maine vs. Other States",
x = "Year",
y = "dem_lean",
color = "Region"
) +
theme_minimal()
ggplot(elec_plot_data, aes(x = year, y = dem_lean, color = region)) +
geom_line(linewidth = 1) +
geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
scale_color_manual(
values = c("Maine" = "black", "Rest of U.S." = "forestgreen")
) +
labs(
title = "",
x = "Year",
y = "dem_lean",
color = "Region"
) +
theme_minimal()
# Create Maine subset
maine_elec <- `Election_data_by_state_2008-2024` %>%
filter(state == "Maine") %>%
select(year, dem_lean) %>%
mutate(region = "Maine")
# Create dataset for all other states: average dem_lean by year
other_elec <- `Election_data_by_state_2008-2024` %>%
filter(state != "Maine") %>%
group_by(year) %>%
summarise(avg_dem_lean = mean(dem_lean, na.rm = TRUE), .groups = "drop") %>%
rename(dem_lean = avg_dem_lean) %>%
mutate(region = "Other States")
# Combine the two datasets for plotting
elec_plot_data <- bind_rows(maine_elec, other_elec)
# Create the line graph - Democratic Leaning (dem_lean) by Year: Maine vs. Other States
ggplot(elec_plot_data, aes(x = year, y = dem_lean, color = region)) +
geom_line(linewidth = 1) +
geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
scale_color_manual(
values = c("Maine" = "black", "Other States" = "forestgreen")
) +
labs(
title = "",
x = "Year",
y = "dem_lean",
color = "Region"
) +
theme_minimal()
# Create the line graph
ggplot(elec_plot_data, aes(x = year, y = dem_lean, color = region)) +
geom_line(linewidth = 1) +
geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
scale_color_manual(
values = c("Maine" = "black", "Rest of U.S." = "grey")
) +
labs(
title = "",
x = "Year",
y = "dem_lean",
color = "Region"
) +
theme_minimal()
# Create the line graph
ggplot(elec_plot_data, aes(x = year, y = dem_lean, color = region)) +
geom_line(linewidth = 1) +
geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
scale_color_manual(
values = c("Maine" = "black", "Rest of US" = "grey")
) +
labs(
title = "",
x = "Year",
y = "dem_lean",
color = "Region"
) +
theme_minimal()
# Create Maine subset
maine_elec <- `Election_data_by_state_2008-2024` %>%
filter(state == "Maine") %>%
select(year, dem_lean) %>%
mutate(region = "Maine")
# Create dataset for all other states: average dem_lean by year
other_elec <- `Election_data_by_state_2008-2024` %>%
filter(state != "Maine") %>%
group_by(year) %>%
summarise(avg_dem_lean = mean(dem_lean, na.rm = TRUE), .groups = "drop") %>%
rename(dem_lean = avg_dem_lean) %>%
mutate(region = "Other States")
# Combine the two datasets for plotting
elec_plot_data <- bind_rows(maine_elec, other_elec)
# Create the line graph - Democratic Leaning (dem_lean) by Year: Maine vs. Other States
ggplot(elec_plot_data, aes(x = year, y = dem_lean, color = region)) +
geom_line(linewidth = 1) +
geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
scale_color_manual(
values = c("Maine" = "black", "All other States" = "forestgreen")
) +
labs(
title = "",
x = "Year",
y = "dem_lean",
color = "Region"
) +
theme_minimal()
head(expanded_gens2)
landval_df <- as.data.frame(landval)
MaineCEMv6 <- readRDS("~/Wageningen/University/Thesis/Data/1. Modified Data/2. Models/MaineCEM/MaineCEMv6.rds")
names(MaineCEMv6)
cell_year_panel_v3 <- readRDS("~/Wageningen/University/Thesis/Data/1. Modified Data/3. Panel Data/cell_year_panel_v3.rds")
names(cell_year_panel_v3)
summary(cell_year_panel_v3$matched)
head(cell_year_panel_v3)
# Summarize the data: sum Solar_Photovoltaic for each year and each group (0 and 1)
group_year_sum <- cell_year_panel_v3 %>%
group_by(year, group) %>%
summarise(total_solar = sum(Solar_Photovoltaic, na.rm = TRUE), .groups = "drop")
# Plot the data using ggplot2
ggplot(group_year_sum, aes(x = year, y = total_solar, color = as.factor(group))) +
geom_line(linewidth = 1) +
labs(
title = "Total Solar Photovoltaic Capacity by Year",
x = "Year",
y = "Total Solar Photovoltaic Capacity",
color = "Group"
) +
# Change the legend labels and colors: customize as desired (here using dodgerblue for group 0 and forestgreen for group 1)
scale_color_manual(
values = c("0" = "dodgerblue", "1" = "forestgreen"),
labels = c("0" = "Group 0", "1" = "Group 1")
) +
theme_minimal()
ggplot(group_year_sum, aes(x = year, y = total_solar, color = as.factor(group))) +
geom_line(linewidth = 1) +
labs(
title = "Total Solar Photovoltaic Capacity by Year",
x = "Year",
y = "Total Solar Photovoltaic Capacity",
color = "Group"
) +
# Change the legend labels and colors: customize as desired (here using dodgerblue for group 0 and forestgreen for group 1)
scale_color_manual(
values = c("0" = "blue", "1" = "forestgreen"),
labels = c("0" = "Counterfactual Cells", "1" = "Maine Cells")
) +
theme_minimal()
# Summarize the data: calculate the weighted sum of Solar_Photovoltaic for each year and each group (0 and 1)
group_year_sum <- cell_year_panel_v3 %>%
group_by(year, group) %>%
summarise(total_solar = sum(Solar_Photovoltaic * weight, na.rm = TRUE), .groups = "drop")
# Plot the data using ggplot2
ggplot(group_year_sum, aes(x = year, y = total_solar, color = as.factor(group))) +
geom_line(linewidth = 1) +
labs(
title = "Weighted Total Solar Photovoltaic Capacity by Year",
x = "Year",
y = "Weighted Total Solar Photovoltaic Capacity",
color = "Group"
) +
scale_color_manual(
values = c("0" = "blue", "1" = "forestgreen"),
labels = c("0" = "Group 0", "1" = "Group 1")
) +
theme_minimal()
# Plot the data using ggplot2
ggplot(group_year_sum, aes(x = year, y = total_solar, color = as.factor(group))) +
geom_line(linewidth = 1) +
labs(
title = "Weighted Total Solar Photovoltaic Capacity by Year",
x = "Year",
y = "Weighted Total Solar Photovoltaic Capacity",
color = "Group"
) +
scale_color_manual(
values = c("0" = "blue", "1" = "forestgreen"),
labels = c("0" = "Counterfactual", "1" = "Maine")
) +
theme_minimal()
