library(sf)
library(terra)
library(tidyverse)
library(geodata)
library(elevatr)
library(terra)


#Output path
output_path <- "~/Wageningen/University/Thesis/Data/elevation/geodata package"
dir.create(output_path, showWarnings = FALSE)

#Defining box for contiguous USA
lon_range <- seq(-125, -67, by = 1)
lat_range <- seq(24, 50, by = 1)

#Empty list for tiles
tiles <- list()

# Loop through the longitude and latitude range
for (lon in lon_range) {
  for (lat in lat_range) {
    cat("Downloading tile for lon:", lon, "lat:", lat, "\n")
    try({
      # Download 90m tile for each (lon, lat)
      tile <- elevation_3s(lon = lon, lat = lat, path = output_path)
      tiles <- append(tiles, tile)
    }, silent = TRUE)
  }
}


tif_files <- list.files(path = "~/Wageningen/University/Thesis/Data/elevation/geodata package/elevation", pattern = "\\.tif$", full.names = TRUE)
tiles <- lapply(tif_files, rast)
combined_raster <- do.call(merge, tiles)
writeRaster(combined_raster, "~/Wageningen/University/Thesis/Data/elevation/geodata package/elevation/USA_elevation_3min.tif")

Elevation <- combined_raster
remove(combined_raster)
Slope <- terrain(Elevation, v = "slope", neighbors = 8, unit = "degrees")
Aspect <- terrain(Elevation, v = "aspect", neighbors = 8, unit = "degrees")
writeRaster(Slope, "~/Wageningen/University/Thesis/Data/elevation/geodata package/USA_slope_3min.tif")
writeRaster(Aspect, "~/Wageningen/University/Thesis/Data/elevation/geodata package/USA_aspect_3min.tif")


#Matching projection and adding to master

#pulling in landval for extent/CRS
landval <- rast("~/Wageningen/University/Thesis/Data/1. Modified Data/landval.tiff")
landval

#pulling in states vector in case I want to mask
states_vect <- vect("~/Wageningen/University/Thesis/Data/1. Modified Data/states_vect/states_vect.shp")
plot(states_vect)

#re-projecting slope and aspect
Slope_reproj <- project(Slope, landval)
Aspect_reproj <- project(Aspect, landval)

#transforming to data frames
Slope_df <- as.data.frame(Slope_reproj, xy = T)
Aspect_df <- as.data.frame(Aspect_reproj, xy = T)

#Changing aspect from degrees to cardinal and intercardinal directions

#function to convert degrees to cardinal directions
aspect_to_cardinal <- function(aspect) {
  ifelse(is.na(aspect), NA,
         ifelse(aspect >= 337.5 | aspect < 22.5, "N",
                ifelse(aspect >= 22.5 & aspect < 67.5, "NE",
                       ifelse(aspect >= 67.5 & aspect < 112.5, "E",
                              ifelse(aspect >= 112.5 & aspect < 157.5, "SE",
                                     ifelse(aspect >= 157.5 & aspect < 202.5, "S",
                                            ifelse(aspect >= 202.5 & aspect < 247.5, "SW",
                                                   ifelse(aspect >= 247.5 & aspect < 292.5, "W",
                                                          ifelse(aspect >= 292.5 & aspect < 337.5, "NW", NA)))))))))
}

#applying function
Aspect_df <- Aspect_df %>%
  mutate(aspect_cardinal = aspect_to_cardinal(aspect))

#Pulling in master.raster
master.raster <- read_rds("~/Wageningen/University/Thesis/Data/1. Modified Data/master_raster_df_v2.rds")
names(master.raster)

master.raster <- master.raster %>%
  select(-slope) %>%
  left_join(Slope_df, by = c("x","y")) %>%
  left_join(Aspect_df, by = c("x","y"))

write_rds(master.raster, "~/Wageningen/University/Thesis/Data/1. Modified Data/master_raster_df_v2.rds")
